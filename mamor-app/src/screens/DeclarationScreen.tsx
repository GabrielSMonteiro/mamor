import React, { useState, useEffect } from "react";
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  ScrollView,
  SafeAreaView,
  Animated,
  Dimensions,
} from "react-native";
import { LinearGradient } from "expo-linear-gradient";
import { Ionicons } from "@expo/vector-icons";

const { width } = Dimensions.get("window");

export default function DeclarationScreen({ navigation }: any) {
  const [currentDeclaration, setCurrentDeclaration] = useState("");
  const [dayNumber, setDayNumber] = useState(1);
  const [heartAnimation] = useState(new Animated.Value(1));

  // Declara√ß√µes de amor - podem ser expandidas
  const declarations = [
    "Voc√™ √© a raz√£o do meu sorriso todos os dias. Cada momento ao seu lado √© um presente que guardo no cora√ß√£o. üíï",
    "Quando penso em voc√™, meu cora√ß√£o se enche de uma felicidade que n√£o consigo explicar. Voc√™ √© minha paz e minha alegria. üå∏",
    "Seus olhos s√£o como estrelas que iluminam meus dias mais escuros. Obrigado por ser minha luz. ‚ú®",
    "Cada dia ao seu lado √© uma nova aventura cheia de amor e descobertas. Voc√™ torna tudo mais especial. ü¶ã",
    "Seu sorriso tem o poder de transformar qualquer dia ruim em algo maravilhoso. Voc√™ √© minha felicidade. üòä",
    "Com voc√™ aprendi que o amor verdadeiro n√£o √© apenas um sentimento, √© uma escolha que fa√ßo todos os dias. üíñ",
    "Voc√™ transformou minha vida em uma hist√≥ria de amor mais bonita do que eu poderia imaginar. üìñ",
    "Cada manh√£ ao seu lado √© um novo come√ßo, cada noite √© uma promessa de que estaremos juntos amanh√£. üåÖ",
    "Seus abra√ßos s√£o meu lugar seguro, seu sorriso √© minha medicina, seu amor √© minha for√ßa. üè†",
    "N√£o importa quantos dias se passem, meu amor por voc√™ s√≥ cresce mais e mais. üå±",
    "Voc√™ √© minha pessoa favorita, meu melhor amigo, meu grande amor, meu para sempre. üë´",
    "Em um mundo cheio de possibilidades, voc√™ √© minha √∫nica certeza. üåç",
    "Obrigado por me amar nos meus dias dif√≠ceis e celebrar comigo nos momentos felizes. üéâ",
    "Voc√™ √© a melodia mais bonita que meu cora√ß√£o j√° conheceu. üéµ",
    "Com voc√™, descobri que o amor √© feito de pequenos gestos e grandes sonhos. üí≠",
    "Cada beijo seu √© uma promessa, cada carinho √© uma declara√ß√£o silenciosa de amor. üíã",
    "Voc√™ √© minha inspira√ß√£o para ser uma pessoa melhor a cada dia. üåü",
    "Nosso amor √© como uma flor: precisa de cuidado, carinho e dedica√ß√£o para florescer. üåπ",
    "Voc√™ √© meu ontem, meu hoje e todos os meus amanh√£s. ‚è∞",
    "Com voc√™ aprendi que o amor n√£o tem pressa, mas tamb√©m nunca para de crescer. üíï",
    "Voc√™ √© o presente mais bonito que a vida me deu. üéÅ",
    "Cada dia ao seu lado √© uma p√°gina nova na nossa hist√≥ria de amor. üìù",
    "Voc√™ √© minha paz em meio ao caos, minha calma na tempestade. üåà",
    "Obrigado por escolher me amar todos os dias, mesmo quando n√£o sou perfeito. üíù",
    "Voc√™ √© minha defini√ß√£o de lar, n√£o importa onde estejamos. üè°",
    "Com voc√™, cada momento comum se torna uma mem√≥ria especial. üì∏",
    "Voc√™ √© minha raz√£o para acreditar no amor verdadeiro. üíï",
    "Cada 'eu te amo' nosso √© √∫nico, mesmo sendo o mil√©simo. üí¨",
    "Voc√™ √© minha companheira de vida, minha parceira de sonhos. ü§ù",
    "Obrigado por fazer do nosso amor a coisa mais bonita da minha vida. ‚ù§Ô∏è",
  ];

  useEffect(() => {
    // Calcula qual declara√ß√£o mostrar baseado no dia atual
    const today = new Date();
    const dayOfYear = Math.floor(
      (today.getTime() - new Date(today.getFullYear(), 0, 0).getTime()) /
        (1000 * 60 * 60 * 24)
    );
    const declarationIndex = (dayOfYear - 1) % declarations.length;
    const currentDay = ((dayOfYear - 1) % 30) + 1; // Ciclo de 30 dias

    setCurrentDeclaration(declarations[declarationIndex]);
    setDayNumber(currentDay);

    // Anima√ß√£o do cora√ß√£o
    startHeartAnimation();
  }, []);

  const startHeartAnimation = () => {
    const animation = Animated.loop(
      Animated.sequence([
        Animated.timing(heartAnimation, {
          toValue: 1.2,
          duration: 1000,
          useNativeDriver: true,
        }),
        Animated.timing(heartAnimation, {
          toValue: 1,
          duration: 1000,
          useNativeDriver: true,
        }),
      ])
    );
    animation.start();
  };

  return (
    <LinearGradient
      colors={["#FFE4E1", "#FFB6C1", "#FF69B4"]}
      style={styles.container}
    >
      <SafeAreaView style={styles.safeArea}>
        {/* Header */}
        <View style={styles.header}>
          <TouchableOpacity
            style={styles.backButton}
            onPress={() => navigation.goBack()}
          >
            <Ionicons name="arrow-back" size={24} color="#FFFFFF" />
          </TouchableOpacity>

          <Text style={styles.title}>Declara√ß√£o</Text>

          <TouchableOpacity
            style={styles.editButton}
            onPress={() => {
              // Aqui voc√™ pode implementar edi√ß√£o personalizada
              console.log("Edit pressed");
            }}
          >
            <Ionicons name="create-outline" size={20} color="#FFFFFF" />
          </TouchableOpacity>
        </View>

        <ScrollView
          contentContainerStyle={styles.scrollContent}
          showsVerticalScrollIndicator={false}
        >
          {/* Day Counter */}
          <View style={styles.dayCounterContainer}>
            <View style={styles.dayCounter}>
              <Ionicons name="heart" size={16} color="#FF69B4" />
              <Text style={styles.dayCounterText}>Dia {dayNumber} de 30</Text>
            </View>
          </View>

          {/* Declaration Card */}
          <View style={styles.declarationCard}>
            <Animated.View
              style={[
                styles.heartContainer,
                {
                  transform: [{ scale: heartAnimation }],
                },
              ]}
            >
              <Ionicons name="heart" size={64} color="#FF69B4" />
            </Animated.View>

            <View style={styles.declarationContent}>
              <Text style={styles.declarationText}>{currentDeclaration}</Text>

              <View style={styles.signature}>
                <Text style={styles.signatureText}>Com todo meu amor ‚ù§Ô∏è</Text>
              </View>
            </View>
          </View>

          {/* Info Card */}
          <View style={styles.infoCard}>
            <Text style={styles.infoText}>
              Uma nova declara√ß√£o aparece a cada dia, em um ciclo de 30
              mensagens especiais.
            </Text>
          </View>

          {/* Fun Stats */}
          <View style={styles.statsContainer}>
            <View style={styles.statCard}>
              <Ionicons name="calendar" size={24} color="#FF69B4" />
              <Text style={styles.statNumber}>{dayNumber}</Text>
              <Text style={styles.statLabel}>Dia Atual</Text>
            </View>

            <View style={styles.statCard}>
              <Ionicons name="heart-circle" size={24} color="#FF69B4" />
              <Text style={styles.statNumber}>{declarations.length}</Text>
              <Text style={styles.statLabel}>Declara√ß√µes</Text>
            </View>

            <View style={styles.statCard}>
              <Ionicons name="infinite" size={24} color="#FF69B4" />
              <Text style={styles.statNumber}>‚àû</Text>
              <Text style={styles.statLabel}>Amor</Text>
            </View>
          </View>
        </ScrollView>
      </SafeAreaView>
    </LinearGradient>
  );
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  safeArea: {
    flex: 1,
  },
  header: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    paddingHorizontal: 20,
    paddingVertical: 16,
  },
  backButton: {
    width: 40,
    height: 40,
    borderRadius: 20,
    backgroundColor: "rgba(255, 255, 255, 0.2)",
    justifyContent: "center",
    alignItems: "center",
  },
  title: {
    fontSize: 24,
    fontWeight: "bold",
    color: "#FFFFFF",
    textShadowColor: "rgba(0, 0, 0, 0.3)",
    textShadowOffset: { width: 1, height: 1 },
    textShadowRadius: 3,
  },
  editButton: {
    width: 40,
    height: 40,
    borderRadius: 20,
    backgroundColor: "rgba(255, 255, 255, 0.2)",
    justifyContent: "center",
    alignItems: "center",
  },
  scrollContent: {
    paddingHorizontal: 20,
    paddingBottom: 20,
  },
  dayCounterContainer: {
    alignItems: "center",
    marginBottom: 24,
  },
  dayCounter: {
    flexDirection: "row",
    alignItems: "center",
    backgroundColor: "rgba(255, 105, 180, 0.2)",
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderRadius: 20,
    borderWidth: 1,
    borderColor: "rgba(255, 105, 180, 0.3)",
  },
  dayCounterText: {
    fontSize: 14,
    fontWeight: "600",
    color: "#FF69B4",
    marginLeft: 8,
  },
  declarationCard: {
    backgroundColor: "rgba(255, 255, 255, 0.95)",
    borderRadius: 24,
    padding: 32,
    marginBottom: 24,
    alignItems: "center",
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.15,
    shadowRadius: 8,
    elevation: 8,
  },
  heartContainer: {
    marginBottom: 24,
  },
  declarationContent: {
    alignItems: "center",
    width: "100%",
  },
  declarationText: {
    fontSize: 18,
    lineHeight: 28,
    color: "#333",
    textAlign: "center",
    fontWeight: "500",
    marginBottom: 24,
  },
  signature: {
    alignSelf: "flex-end",
  },
  signatureText: {
    fontSize: 14,
    color: "#666",
    fontStyle: "italic",
    fontWeight: "500",
  },
  infoCard: {
    backgroundColor: "rgba(255, 255, 255, 0.7)",
    borderRadius: 16,
    padding: 16,
    marginBottom: 24,
  },
  infoText: {
    fontSize: 14,
    color: "#666",
    textAlign: "center",
    lineHeight: 20,
  },
  statsContainer: {
    flexDirection: "row",
    justifyContent: "space-between",
    gap: 12,
  },
  statCard: {
    flex: 1,
    backgroundColor: "rgba(255, 255, 255, 0.9)",
    borderRadius: 16,
    padding: 16,
    alignItems: "center",
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 4,
    elevation: 3,
  },
  statNumber: {
    fontSize: 20,
    fontWeight: "bold",
    color: "#FF69B4",
    marginTop: 8,
    marginBottom: 4,
  },
  statLabel: {
    fontSize: 12,
    color: "#666",
    textAlign: "center",
  },
});
